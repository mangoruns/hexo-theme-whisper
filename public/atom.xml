<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[❤碎碎念]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="http://yoursite.com/"/>
  <updated>2014-08-04T12:48:27.595Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name><![CDATA[Vico]]></name>
    
  </author>
  
  <generator uri="http://zespia.tw/hexo/">Hexo</generator>
  
  <entry>
    <title><![CDATA[multipart/form-data]]></title>
    <link href="http://yoursite.com/2014/07/08/form-data/"/>
    <id>http://yoursite.com/2014/07/08/form-data/</id>
    <published>2014-07-08T03:03:42.000Z</published>
    <updated>2014-07-08T03:03:42.000Z</updated>
    <content type="html"><![CDATA[<h2 id="几种常见的Content-Type类型">几种常见的Content-Type类型</h2>
<table>
<thead>
<tr>
<th>值</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>application/x-www-form-urlencoded</td>
<td>在发送前编码所有字符（默认）</td>
</tr>
<tr>
<td>multipart/form-data</td>
<td>不对字符编码。在使用包含文件上传控件的表单时，必须使用该值。</td>
</tr>
<tr>
<td>text/plain</td>
<td>空格转换为 “+” 加号，但不对特殊字符编码。</td>
</tr>
</tbody>
</table>
<h2 id="multipart/form-data">multipart/form-data</h2>
<ol>
<li><code>multipart/form-data</code>的基础方法是<code>post</code></li>
<li>与<code>post</code>不同之处：请求头，请求体</li>
<li><p>请求头必须包含一个特殊的头信息<code>Content-Type</code>,且其值也必须规定为<code>multipart/form-data</code>,同时还需要规定一个内容分隔符，用于分割多个<code>post</code>的内容</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre><span class="type">Content</span>-<span class="type">Type</span>: multipart/form-<span class="typedef"><span class="keyword">data</span>; boundary=$<span class="container">{<span class="title">bound</span>}</span></span>
</pre></td></tr></table></figure> 

<p>其中<code>${bound}</code> 是一个占位符，代表我们规定的分割符，可以自己任意规定，但为了避免和    正常文本重复了，尽量要使用复杂一点的内容。如：<code>--------------------56423498738365</code></p>
</li>
<li><code>multipart/form-data</code>的请求体也是一个字符串，不过和<code>post</code>的请求体不同的是它的构造方式，<code>post</code>是简单的<code>name=value</code>值连接，而<code>multipart/form-data</code>则是添加了分隔符等内容的构造体。</li>
</ol>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
</pre></td><td class="code"><pre>-<span class="ruby">-<span class="variable">${</span>bound}  
</span>Content-Disposition: form-data; name="Filename"  
  
HTTP.pdf  
-<span class="ruby">-<span class="variable">${</span>bound}  
</span>Content-Disposition: form-data; name="file000"; filename="HTTP协议详解.pdf"  
Content-Type: application/octet-stream  
<span class="tag">  
%<span class="title">PDF</span></span>-1.5  
file content  
<span class="tag">%</span>%EOF  
  
-<span class="ruby">-<span class="variable">${</span>bound}  
</span>Content-Disposition: form-data; name="Upload"  
  
Submit Query  
-<span class="ruby">-<span class="variable">${</span>bound}--</span>
</pre></td></tr></table></figure>

<p>如果传送的内容是一个文件的话，那么还会包含文件名信息，以及文件内容的类型。上面的第二个小部分其实是一个文件体的结构，最后会以—分割符—结尾，表示请求体结束。</p>
<h2 id="FormDate">FormDate</h2>
<p><a href="http://www.ietf.org/rfc/rfc2388.txt" target="_blank" rel="external">http://www.ietf.org/rfc/rfc2388.txt</a></p>
<p>XMLHTTPRequest Level 2 添加的新接口<code>FormDate</code></p>
<p><strong>最大优点：异步上传一个二进制文件</strong></p>
<h3 id="构造函数">构造函数</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre><span class="keyword">new</span> FormDate(<span class="keyword">optional</span> HTMLFormElement form)
</pre></td></tr></table></figure>

<ul>
<li><strong>form :</strong> (可选) 一个HTML表单元素,可以包含任何形式的表单控件,包括文件输入框.</li>
</ul>
<h3 id="方法">方法</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre><span class="function"><span class="title">append</span><span class="params">()</span></span>
</pre></td></tr></table></figure>

<p>给当前FormData对象添加一个键/值对.</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
</pre></td><td class="code"><pre><span class="keyword">void</span> append(DOMString name, Blob <span class="keyword">value</span>, optional DOMString filename);
<span class="keyword">void</span> append(DOMString name, DOMString <span class="keyword">value</span>);
</pre></td></tr></table></figure>

<ul>
<li><strong>name :</strong> 字段名称.</li>
<li><strong>value :</strong> 字段值.可以是,或者一个字符串,如果全都不是,则该值会被自动转换成字符串.</li>
<li><strong>filename :</strong> (可选) 指定文件的文件名,当value参数被指定为一个Blob对象或者一个File对象时,该文件名会被发送到服务器上,对于Blob对象来说,这个值默认为”blob”.</li>
</ul>
<h3 id="兼容">兼容</h3>
<h4 id="Desktop">Desktop</h4>
<table>
<thead>
<tr>
<th>Feature</th>
<th>Chrome</th>
<th>Firefox (Gecko)</th>
<th>Internet Explorer</th>
<th>Opera</th>
<th>Safari</th>
</tr>
</thead>
<tbody>
<tr>
<td>Basic</td>
<td>support</td>
<td>7+</td>
<td>4.0 (2.0)</td>
<td>10+</td>
<td>12+</td>
<td>5+</td>
</tr>
<tr>
<td>支持filename参数</td>
<td>(Yes)</td>
<td>22.0 (22.0)</td>
<td>?</td>
<td>?</td>
<td>?</td>
</tr>
</tbody>
</table>
<h4 id="Mobile">Mobile</h4>
<hr>
<table>
<thead>
<tr>
<th>Feature</th>
<th>Android</th>
<th>Chrome for Android</th>
<th>Firefox Mobile (Gecko)</th>
<th>IE Mobile</th>
<th>Opera Mobile</th>
<th>Safari Mobile</th>
</tr>
</thead>
<tbody>
<tr>
<td>Basic support</td>
<td>3.0</td>
<td>?</td>
<td>4.0 (2.0)</td>
<td>?</td>
<td>12+</td>
<td>?</td>
</tr>
<tr>
<td>支持filename参数</td>
<td>?</td>
<td>?</td>
<td>22.0 (22.0)</td>
<td>?</td>
<td>?</td>
<td>?</td>
</tr>
</tbody>
</table>
<blockquote>
<p><strong>Gecko附注:</strong></p>
<p>在Gecko 7.0 (Firefox 7.0 / Thunderbird 7.0 / SeaMonkey 2.4)之前,如果你将Blob对象作为数据添加到一个<code>FormData</code>对象中,则在使用<code>Ajax</code>将这个<code>FormData</code>对象提交到服务器上时,所发送的HTTP请求头中代表那个<code>Blob</code>对象所包含文件的文件名称的<code>&quot;Content-Disposition&quot;</code>请求头的值会是一个空字符串,这会引发某些服务器程序上的错误.从Gecko 7.0开始,这种情况下发送的文件名称改为”blob”这个字符串.</p>
</blockquote>
<h3 id="使用FormData对象">使用FormData对象</h3>
<p>利用<code>FormData</code>对象,你可以使用一系列的键值对来模拟一个完整的表单,然后使用<code>XMLHttpRequest</code>发送这个”表单”.</p>
<h4 id="创建一个FormData对象">创建一个FormData对象</h4>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
</pre></td><td class="code"><pre><span class="tag">&lt;<span class="title">form</span> <span class="attribute">action</span>=<span class="value">""</span> <span class="attribute">id</span>=<span class="value">"myFormElement"</span>&gt;</span>
		<span class="tag">&lt;<span class="title">input</span> <span class="attribute">type</span>=<span class="value">"text"</span> <span class="attribute">name</span>=<span class="value">"title"</span>&gt;</span>
		<span class="tag">&lt;<span class="title">input</span> <span class="attribute">type</span>=<span class="value">"text"</span> <span class="attribute">name</span>=<span class="value">"age"</span>&gt;</span>
		<span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"javascript:;"</span> <span class="attribute">id</span>=<span class="value">"submit"</span>&gt;</span>发送<span class="tag">&lt;/<span class="title">a</span>&gt;</span>
	<span class="tag">&lt;/<span class="title">form</span>&gt;</span>
	<span class="tag">&lt;<span class="title">script</span>&gt;</span><span class="javascript">
	<span class="keyword">var</span> sendBtn = document.getElementById(<span class="string">"submit"</span>);
	sendBtn.onclick = <span class="function"><span class="keyword">function</span><span class="params">()</span>{</span>
		<span class="keyword">var</span> formElement = document.getElementById(<span class="string">"myFormElement"</span>);
		formData = <span class="keyword">new</span> FormData(formElement);
		formData.append(<span class="string">"serialnumber"</span>, <span class="string">"123"</span>);
		<span class="keyword">var</span> oReq = <span class="keyword">new</span> XMLHttpRequest();
		oReq.open(<span class="string">"POST"</span>, <span class="string">"upload.php"</span>);
		oReq.send(formData);
	}
	</span><span class="tag">&lt;/<span class="title">script</span>&gt;</span>
</pre></td></tr></table></figure>

<h4 id="使用FormData对象发送文件">使用FormData对象发送文件</h4>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
</pre></td><td class="code"><pre><span class="tag">&lt;<span class="title">form</span> <span class="attribute">enctype</span>=<span class="value">"multipart/form-data"</span> <span class="attribute">method</span>=<span class="value">"post"</span> <span class="attribute">name</span>=<span class="value">"fileinfo"</span>&gt;</span>
    <span class="tag">&lt;<span class="title">label</span>&gt;</span>Your email address:<span class="tag">&lt;/<span class="title">label</span>&gt;</span>
    <span class="tag">&lt;<span class="title">input</span> <span class="attribute">type</span>=<span class="value">"email"</span> <span class="attribute">autocomplete</span>=<span class="value">"on"</span> <span class="attribute">autofocus</span> <span class="attribute">name</span>=<span class="value">"userid"</span> <span class="attribute">placeholder</span>=<span class="value">"email"</span> <span class="attribute">required</span> <span class="attribute">size</span>=<span class="value">"32"</span> <span class="attribute">maxlength</span>=<span class="value">"64"</span> /&gt;</span>
    <span class="tag">&lt;<span class="title">br</span> /&gt;</span>
    <span class="tag">&lt;<span class="title">label</span>&gt;</span>Custom file label:<span class="tag">&lt;/<span class="title">label</span>&gt;</span>
    <span class="tag">&lt;<span class="title">input</span> <span class="attribute">type</span>=<span class="value">"text"</span> <span class="attribute">name</span>=<span class="value">"filelabel"</span> <span class="attribute">size</span>=<span class="value">"12"</span> <span class="attribute">maxlength</span>=<span class="value">"32"</span> /&gt;</span>
    <span class="tag">&lt;<span class="title">br</span> /&gt;</span>
    <span class="tag">&lt;<span class="title">label</span>&gt;</span>File to stash:<span class="tag">&lt;/<span class="title">label</span>&gt;</span>
    <span class="tag">&lt;<span class="title">input</span> <span class="attribute">type</span>=<span class="value">"file"</span> <span class="attribute">name</span>=<span class="value">"file"</span> <span class="attribute">required</span> /&gt;</span>
<span class="tag">&lt;/<span class="title">form</span>&gt;</span>
<span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"output"</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span>
<span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"javascript:sendForm()"</span>&gt;</span>Stash the file!<span class="tag">&lt;/<span class="title">a</span>&gt;</span>


<span class="tag">&lt;<span class="title">script</span>&gt;</span><span class="javascript">
<span class="function"><span class="keyword">function</span> <span class="title">sendForm</span><span class="params">()</span> {</span>
    <span class="keyword">var</span> oOutput = document.getElementById(<span class="string">"output"</span>);
    <span class="keyword">var</span> oData = <span class="keyword">new</span> FormData(document.forms.namedItem(<span class="string">"fileinfo"</span>));

    oData.append(<span class="string">"CustomField"</span>, <span class="string">"This is some extra data"</span>);

    <span class="keyword">var</span> oReq = <span class="keyword">new</span> XMLHttpRequest();
    oReq.open(<span class="string">"POST"</span>, <span class="string">"upload.php"</span>, <span class="literal">true</span>);
    oReq.onload = <span class="function"><span class="keyword">function</span><span class="params">(oEvent)</span> {</span>
        <span class="keyword">if</span> (oReq.status == <span class="number">200</span>) {
            oOutput.innerHTML = <span class="string">"Uploaded!"</span>;
        } <span class="keyword">else</span> {
            oOutput.innerHTML = <span class="string">"Error "</span> + oReq.status + <span class="string">" occurred uploading your file.&lt;br \/&gt;"</span>;
        }
    };

    oReq.send(oData);
}
</span><span class="tag">&lt;/<span class="title">script</span>&gt;</span>
</pre></td></tr></table></figure>

<h4 id="使用jQuery来发送FormData">使用jQuery来发送FormData</h4>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
</pre></td><td class="code"><pre><span class="keyword">var</span> fd = <span class="keyword">new</span> FormData(document.getElementById(<span class="string">"fileinfo"</span>));
fd.append(<span class="string">"CustomField"</span>, <span class="string">"This is some extra data"</span>);
$.ajax({
  url: <span class="string">"stash.php"</span>,
  <span class="keyword">type</span>: <span class="string">"POST"</span>,
  data: fd,
  processData: <span class="keyword">false</span>,  <span class="comment">// 告诉jQuery不要去处理发送的数据</span>
  contentType: <span class="keyword">false</span>   <span class="comment">// 告诉jQuery不要去设置Content-Type请求头</span>
  <span class="javadoc">/** 
  *必须false才会自动加上正确的Content-Type 
  */</span>  
  contentType:<span class="keyword">false</span>,  
  <span class="javadoc">/** 
  * 必须false才会避开jQuery对 formdata 的默认处理 
  * XMLHttpRequest会对 formdata 进行正确的处理 
  */</span>  
  processData:<span class="keyword">false</span>  
});
</pre></td></tr></table></figure>]]></content>
    
    
      <category term="formData" scheme="http://yoursite.com/tags/formData/"/>
    
      <category term="HTTP" scheme="http://yoursite.com/categories/HTTP/"/>
    
  </entry>
  
</feed>
